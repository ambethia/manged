- form.inputs "General", :class => 'collapsible' do
  = form.input :name
  = form.input :entry, :label => 'Model (displayid)'
  %li#item_klass_input.select.optional
    %label(for="item_klass") Item Class
    = select_tag "item[klass]", options_for_item_klass(@item.klass)
  = form.input :displayid, :label => 'Model (displayid)'
  = form.input :Quality, :as => :select, :collection => Item.qualities
  = form.input :Flags, :as => :check_boxes, :collection => Item::FLAGS.reject{|f|!f.last}, :label_method => :first, :value_method => :last
  = form.input :InventoryType, :label => 'Inventory Type', :as => :select, :collection => Item.inventory_types, :hint => 'In what slot the item can be equipped.'
- form.inputs "Stats", :class => 'startClosed' do
  = form.input :StatsCount, :label => 'Stats Count', :as => :select, :collection => (0..10), :hint => "The number of stats used for this item. Only the first n stats are used."
  = form.input :stat_type1, :label => 'Stat Type 1', :as => :select, :collection => Item::STATS.sort
  = form.input :stat_value1, :label => 'Stat Value 1'
  = form.input :stat_type2, :label => 'Stat Type 2', :as => :select, :collection => Item::STATS.sort
  = form.input :stat_value2, :label => 'Stat Value 2'
  = form.input :stat_type3, :label => 'Stat Type 3', :as => :select, :collection => Item::STATS.sort
  = form.input :stat_value3, :label => 'Stat Value 3'
  = form.input :stat_type4, :label => 'Stat Type 4', :as => :select, :collection => Item::STATS.sort
  = form.input :stat_value4, :label => 'Stat Value 4'
  = form.input :stat_type5, :label => 'Stat Type 5', :as => :select, :collection => Item::STATS.sort
  = form.input :stat_value5, :label => 'Stat Value 5'
  = form.input :stat_type6, :label => 'Stat Type 6', :as => :select, :collection => Item::STATS.sort
  = form.input :stat_value6, :label => 'Stat Value 6'
  = form.input :stat_type7, :label => 'Stat Type 7', :as => :select, :collection => Item::STATS.sort
  = form.input :stat_value7, :label => 'Stat Value 7'
  = form.input :stat_type8, :label => 'Stat Type 8', :as => :select, :collection => Item::STATS.sort
  = form.input :stat_value8, :label => 'Stat Value 8'
  = form.input :stat_type9, :label => 'Stat Type 9', :as => :select, :collection => Item::STATS.sort
  = form.input :stat_value9, :label => 'Stat Value 9'
  = form.input :stat_type10, :label => 'Stat Type 10', :as => :select, :collection => Item::STATS.sort
  = form.input :stat_value10, :label => 'Stat Value 10'
  = form.input :ScalingStatDistribution, :label => 'Scaling Stat Distribution'
  = form.input :ScalingStatValue, :label => 'Scaling Stat Value'
  = form.input :dmg_min1, :label => 'Dmg Min 1'
  = form.input :dmg_max1, :label => 'Dmg Max 1'
  = form.input :dmg_type1, :label => 'Dmg Type 1'
  = form.input :dmg_min2, :label => 'Dmg Min 2'
  = form.input :dmg_max2, :label => 'Dmg Max 2'
  = form.input :dmg_type2, :label => 'Dmg Type 2'
  = form.input :armor, :label => 'Armor'
  = form.input :holy_res, :label => 'Holy Res'
  = form.input :fire_res, :label => 'Fire Res'
  = form.input :nature_res, :label => 'Nature Res'
  = form.input :frost_res, :label => 'Frost Res'
  = form.input :shadow_res, :label => 'Shadow Res'
  = form.input :arcane_res, :label => 'Arcane Res'
- form.inputs "Spells/Procs", :class => 'startClosed' do
  = form.input :delay, :label => 'Delay'
  = form.input :ammo_type, :label => 'Ammo type'
  = form.input :RangedModRange, :label => 'Rangedmodrange'
  = form.input :spellid_1, :label => 'Spellid 1'
  = form.input :spelltrigger_1, :label => 'Spelltrigger 1'
  = form.input :spellcharges_1, :label => 'Spellcharges 1'
  = form.input :spellppmRate_1, :label => 'Spellppmrate 1'
  = form.input :spellcooldown_1, :label => 'Spellcooldown 1'
  = form.input :spellcategory_1, :label => 'Spellcategory 1'
  = form.input :spellcategorycooldown_1, :label => 'Spellcategorycooldown 1'
  = form.input :spellid_2, :label => 'Spellid 2'
  = form.input :spelltrigger_2, :label => 'Spelltrigger 2'
  = form.input :spellcharges_2, :label => 'Spellcharges 2'
  = form.input :spellppmRate_2, :label => 'Spellppmrate 2'
  = form.input :spellcooldown_2, :label => 'Spellcooldown 2'
  = form.input :spellcategory_2, :label => 'Spellcategory 2'
  = form.input :spellcategorycooldown_2, :label => 'Spellcategorycooldown 2'
  = form.input :spellid_3, :label => 'Spellid 3'
  = form.input :spelltrigger_3, :label => 'Spelltrigger 3'
  = form.input :spellcharges_3, :label => 'Spellcharges 3'
  = form.input :spellppmRate_3, :label => 'Spellppmrate 3'
  = form.input :spellcooldown_3, :label => 'Spellcooldown 3'
  = form.input :spellcategory_3, :label => 'Spellcategory 3'
  = form.input :spellcategorycooldown_3, :label => 'Spellcategorycooldown 3'
  = form.input :spellid_4, :label => 'Spellid 4'
  = form.input :spelltrigger_4, :label => 'Spelltrigger 4'
  = form.input :spellcharges_4, :label => 'Spellcharges 4'
  = form.input :spellppmRate_4, :label => 'Spellppmrate 4'
  = form.input :spellcooldown_4, :label => 'Spellcooldown 4'
  = form.input :spellcategory_4, :label => 'Spellcategory 4'
  = form.input :spellcategorycooldown_4, :label => 'Spellcategorycooldown 4'
  = form.input :spellid_5, :label => 'Spellid 5'
  = form.input :spelltrigger_5, :label => 'Spelltrigger 5'
  = form.input :spellcharges_5, :label => 'Spellcharges 5'
  = form.input :spellppmRate_5, :label => 'Spellppmrate 5'
  = form.input :spellcooldown_5, :label => 'Spellcooldown 5'
  = form.input :spellcategory_5, :label => 'Spellcategory 5'
  = form.input :spellcategorycooldown_5, :label => 'Spellcategorycooldown 5'
- form.inputs "Sockets", :class => 'startClosed' do
  = form.input :socketColor_1, :label => 'Socketcolor 1'
  = form.input :socketContent_1, :label => 'Socketcontent 1'
  = form.input :socketColor_2, :label => 'Socketcolor 2'
  = form.input :socketContent_2, :label => 'Socketcontent 2'
  = form.input :socketColor_3, :label => 'Socketcolor 3'
  = form.input :socketContent_3, :label => 'Socketcontent 3'
  = form.input :socketBonus, :label => 'Socketbonus'
  = form.input :GemProperties, :label => 'Gemproperties'
- form.inputs "Misc", :class => 'startClosed' do
  = form.input :AllowableClass, :label => 'Allowable Classes', :as => :check_boxes, :collection => Item::PLAYER_CLASSES.reject{|f|f.last == :null}, :hint => 'None checked for no restriction.'
  = form.input :AllowableRace,  :label => 'Allowable Races',   :as => :check_boxes, :collection => Item::PLAYER_RACES,   :hint => 'None checked for no restriction.'
  = form.input :ItemLevel, :label => 'Item Level'
  = form.input :RequiredLevel, :label => 'Required Level'
  = form.input :RequiredSkill, :label => 'Required Skill', :as => :select, :collection => Item::REQUIRED_SKILLS.sort, :hint => "Only the most common options are included here. Excluded a handful of skills used only by 1 or 2 items and over a hundred others not used by any. See SkillLine.dbc"
  = form.input :RequiredSkillRank, :label => 'Required Skill Rank'
  = form.input :requiredspell, :label => 'Required Spell', :hint => "ID of a spell require to be known before using the item. Usually a crafting specialization, ie: Dragonscale Leatherworking or Gnomish Engineering."
  / = form.input :requiredhonorrank, :hint => "Seems to be deprecated, no items currently use this."
  / = form.input :RequiredCityRank, :hint => "Seems to be deprecated, no items currently use this."
  = form.input :RequiredReputationFaction, :label => 'Required Reputation Faction', :as => :select, :collection => FACTIONS.sort
  = form.input :RequiredReputationRank, :label => 'Required Reputation Rank', :as => :select, :collection => Item.reputation_ranks
  = form.input :maxcount, :label => 'Max Count', :hint => "Maximum number of copies of this item a player can have. Use 0 for infinite."
  = form.input :stackable, :label => 'Stackable', :hint => "The number of copies of this item that can be stacked in the same slot."
  = form.input :ContainerSlots, :label => 'Container Slots', :hint => "If the item is a bag, this field controls the number of slots the bag has."
  = form.input :bonding, :label => 'Bonding'
  = form.input :description, :label => 'Description'
  = form.input :PageText, :label => 'Pagetext'
  = form.input :LanguageID, :label => 'Languageid'
  = form.input :PageMaterial, :label => 'Pagematerial'
  = form.input :startquest, :label => 'Startquest'
  = form.input :lockid, :label => 'Lockid'
  = form.input :Material, :label => 'Material'
  = form.input :sheath, :label => 'Sheath'
  = form.input :RandomProperty, :label => 'Randomproperty'
  = form.input :RandomSuffix, :label => 'Randomsuffix'
  = form.input :block, :label => 'Block'
  = form.input :itemset, :label => 'Itemset'
  = form.input :MaxDurability, :label => 'Maxdurability'
  = form.input :area, :label => 'Area'
  = form.input :Map, :label => 'Map'
  = form.input :BagFamily, :label => 'Bagfamily'
  = form.input :TotemCategory, :label => 'Totemcategory'
  = form.input :RequiredDisenchantSkill, :label => 'Requireddisenchantskill'
  = form.input :ArmorDamageModifier, :label => 'Armordamagemodifier'
  = form.input :Duration, :label => 'Duration'
  = form.input :ItemLimitCategory, :label => 'Itemlimitcategory'
  = form.input :HolidayId, :label => 'Holidayid'
  = form.input :ScriptName, :label => 'Scriptname'
  = form.input :DisenchantID, :label => 'Disenchantid'
  = form.input :FoodType, :label => 'Foodtype'
  = form.input :minMoneyLoot, :label => 'Minmoneyloot'
  = form.input :maxMoneyLoot, :label => 'Maxmoneyloot'
  = form.input :Faction, :label => 'Faction', :as => :select, :collection => Item.factions
  = form.input :BuyCount, :label => 'Buy Count',   :hint => 'The size of the item stack when sold by vendors.'
  = form.input :BuyPrice, :label => 'Buy Price',   :hint => 'The price required to pay to buy this item from a vendor, in copper.'
  = form.input :SellPrice, :label => 'Sell Price', :hint => 'The price that the vendor will pay you for the item when you sell it and if it is possible to be sold, in copper. Put in 0 if the item cannot be sold to a vendor.'
